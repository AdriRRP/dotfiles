# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# Locale
export LANG=es_ES.UTF-8

# Default editor
export EDITOR=nvim

# Oh my ZSH configuration
export ZSH=$HOME/.oh-my-zsh

ZSH_THEME="powerlevel10k/powerlevel10k"

plugins=(
  git
  brew
  bundler
  zsh-syntax-highlighting
  zsh-autosuggestions
)

# Load oh-my-zsh
source $ZSH/oh-my-zsh.sh

# Plugins
source ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh
source ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# ‚îÄ‚îÄ‚îÄ Banner "Hack Yourself" ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

# Get IP info for banner booter
ip_local=$(ipconfig getifaddr en0 2>/dev/null || hostname -I | awk '{print $1}')
ip_public=$(curl -s https://api.ipify.org)

printf "\e[1;32m          .                                                      .\n"
printf "        .n                   .                 .                  n.\n"
printf "  .   .dP                  dP                   9b                 9b.    .\n"
printf " 4    qXb         .       dX                     Xb       .        dXp     t\n"
printf "dX.    9Xb      .dXb    __                         __    dXb.     dXP     .Xb\n"
printf "9XXb._       _.dXXXXb dXXXXbo.                 .odXXXXb dXXXXb._       _.dXXP\n"
printf " 9XXXXXXXXXXXXXXXXXXXVXXXXXXXXOo.           .oOXXXXXXXXVXXXXXXXXXXXXXXXXXXXP\n"
printf "  \`9XXXXXXXXXXXXXXXXXXXXX'~   ~\`OOO8b   d8OOO'~   ~\`XXXXXXXXXXXXXXXXXXXXXP'\n"
printf "    \`9XXXXXXXXXXXP' \`9XX'   \e[1;31mHACK\e[1;32m    \`98v8P' \e[1;31mYOURSELF\e[1;32m \`XXP' \`9XXXXXXXXXXXP'\n"
printf "        ~~~~~~~       9X.          .db|db.          .XP       ~~~~~~~\n"
printf "                        )b.  .dbo.dP'\`v'\`9b.odb.  .dX(\n"
printf "                      ,dXXXXXXXXXXXb     dXXXXXXXXXXXb.\n"
printf "                     dXXXXXXXXXXXP'   .   \`9XXXXXXXXXXXb\n"
printf "                    dXXXXXXXXXXXXb   d|b   dXXXXXXXXXXXXb\n"
printf "                    9XXb'   \`XXXXXb.dX|Xb.dXXXXX'   \`dXXP\n"
printf "                     \`'      9XXXXXX(   )XXXXXXP      \`'\n"
printf "                              XXXX X.\`v'.X XXXX\n"
printf "                              XP^X'\`b   d'\`X^XX\n"
printf "                              X. 9  \`   '  P )X\n"
printf "                              \`b  \`       '  d'\n"
printf "                               \`             '\e[0m\n"
printf "\n"
printf "                 üë§  User         : %s\n" "$USER"
printf "                 üñ•Ô∏è  Hostname     : %s\n" "$(hostname)"
printf "                 üåê  Local IP     : %s\n" "$ip_local"
printf "                 üåé  Public IP    : %s\n" "$ip_public"
printf "                 üóÇÔ∏è  Directory    : %s\n" "$PWD"
printf "                 üïí  DateTime     : %s\n" "$(date '+%A, %d %B %Y %H:%M:%S')"
printf "                 üß†  OS           : %s\n" "$(uname -sr)"
printf "                 üèóÔ∏è  Arch         : %s\n" "$(uname -m)"
printf "                 üîß  Shell        : %s\n" "$SHELL"

# Remove powerlevel10k verbosity on start
typeset -g POWERLEVEL9K_INSTANT_PROMPT=quiet

#### PATH

# Hombrew binaries for Mac
if [ -d "/opt/homebrew/bin" ]; then export PATH="/opt/homebrew/bin:$PATH"; fi
if [ -d $HOME/.bin ]; then export PATH="$HOME/.bin:$PATH"; fi

## Rust
if [ -d $HOME/.cargo ]; then export CARGO_HOME=$HOME/.cargo; fi
if [ -d $CARGO_HOME/bin ]; then export PATH="$CARGO_HOME/bin:$PATH"; fi
if [ -d /usr/local/src/rustc/src ]; then export RUST_SRC_PATH=/usr/local/src/rustc/src; fi

## Kleopatra (digital sign)
if [ -d "/opt/homebrew/opt/kleopatra/bin" ]; then export PATH="/opt/homebrew/opt/kleopatra/bin:$PATH"; fi

# LM Studio CLI (lms)
if [ -d $HOME/.lmstudio/bin/ ]; then export PATH="$PATH:$HOME/.lmstudio/bin/"; fi

# Fix para Ghostty en Linux: evitar problemas con Tmux si TERM es xterm-ghostty
if [[ "$OSTYPE" == "linux-gnu"* ]] && [[ "$TERM" == "xterm-ghostty" ]]; then
  export TERM="xterm-256color"
fi

